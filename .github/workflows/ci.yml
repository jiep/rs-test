on: [push]

name: ci

jobs:
  actionlint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      - name: actionlint
        uses: raven-actions/actionlint@v2
  build_and_test:
    name: Build binary, test, and check format
    runs-on: ubuntu-latest
    needs: actionlint
    steps:
      - name: Checkout repo
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        
      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
      
      - name: Check code
        run: cargo check

      - name: Check tests
        run: cargo test
      
      - name: Check format
        run: cargo fmt --all -- --check

      - name: Check Clippy
        run: cargo clippy -- -D warnings

  deploy:
    name: Create release cross-compiling binaries
    needs: build_and_test
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    permissions:
      contents: write
      id-token: write
      attestations: write
    strategy: 
      matrix:
        target: [
          x86_64-pc-windows-gnu,
          x86_64-unknown-linux-gnu,
          x86_64-apple-darwin
        ]
    steps:
      - name: Checkout repo
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Install dependencies for Windows target
        if: ${{ contains(matrix.target, 'windows') }}
        run: |
          sudo apt-get install -y gcc-mingw-w64
      - name: Install dependencies for Mac OS target
        if: ${{ contains(matrix.target, 'darwin') }}
        uses: mbround18/setup-osxcross@2d414172ec5f74d494102538be9d31977d89e97d # v1.1
        with:
          osx-version: "12.3"

      - name: Build target
        if: ${{ contains(matrix.target, 'darwin') }}
        run: |
          export CC=o64-clang
          export CXX=o64-clang++
          cargo build --release --target ${{ matrix.target }}
      - name: Build target
        if: ${{ !contains(matrix.target, 'darwin') }}
        run: cargo build --release --target ${{ matrix.target }}

      - name: Package all targets
        shell: bash
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          BIN=rs-test
          BIN_NAME=$BIN
          TARGET=${{ matrix.target }}
          VERSION="${GITHUB_REF#refs/tags/}"
          if [[ ${TARGET} == *"windows"* ]]; then
            BIN_NAME=${BIN}.exe
          fi
          if [[ ${TARGET} != *"darwin"* ]]; then
            strip target/${TARGET}/release/${BIN_NAME}
          fi
          cd target/${TARGET}/release
          sha256sum ${BIN_NAME} | cut -f 1 -d " " > digest.sha256
          zip ../../../${BIN}-${VERSION}-${TARGET}.zip ${BIN_NAME} digest.sha256
          cd -

      - name: Generate artifact attestation
        if: startsWith(github.ref, 'refs/tags/')
        uses: actions/attest-build-provenance@e8998f949152b193b063cb0ec769d69d929409be # v2.4.0
        with:
          subject-path: 'rs-test-${{ github.ref_name }}-${{ matrix.target }}.zip'

      - name: Add to Releases
        if: startsWith(github.ref, 'refs/tags/')
        uses: ncipollo/release-action@bcfe5470707e8832e12347755757cec0eb3c22af # v1.18.0
        with:
          artifacts: "*.zip"
          generateReleaseNotes: true
          allowUpdates: true
          token: ${{ secrets.GITHUB_TOKEN }}
